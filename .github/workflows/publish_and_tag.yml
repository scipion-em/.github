# Workflow to send master to pypi and tag the branch
name: master to pypi with comments and tag

# Triggers the workflow on push to the master branch
# In a reusable workflow the inputs will be passed from a caller workflow
on:
  push:
    branches: [ master ]
  workflow_call:
    inputs:
      folder:
        description: 'Name of the folder that contains __version__'
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools twine build
        pip install scipion-pyworkflow scipion-em
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine upload dist/* -c "${{ secrets.PYPI_COMMENT }}"
    - name: Get version and tag
      run: |
        export PACKAGE_VERSION=$(python -c "import ${{ inputs.folder }}; print('VERSION', 'v'+${{ inputs.folder }}.__version__)" | grep VERSION | sed "s/VERSION //g")
        git tag $PACKAGE_VERSION
        git push origin $PACKAGE_VERSION
